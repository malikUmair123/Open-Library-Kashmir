@model Open_Library_Kashmir.Models.Book

@using Open_Library_Kashmir.Helpers

@{
    ViewBag.Title = "Book Details";
}

@using (Html.BeginForm("AddToWishlist", "Donation", FormMethod.Post, new { id = "wishlist" }))
{
    @Html.HiddenFor(m => m.BookId)
    @Html.HiddenFor(m => m.Title)
    @Html.HiddenFor(m => m.Author)
    @Html.HiddenFor(m => m.Publisher)
    @Html.HiddenFor(m => m.PublicationYear)
    @Html.HiddenFor(m => m.Condition)
    @Html.HiddenFor(m => m.Class)
    @Html.HiddenFor(m => m.Genre)
    @Html.HiddenFor(m => m.Subject)
    @Html.HiddenFor(m => m.ISBN)
    @Html.HiddenFor(m => m.ImageUrl)
    @Html.HiddenFor(m => m.ShortDescription)
    @Html.HiddenFor(m => m.Status)
    @Html.HiddenFor(m => m.AvailableAt)

    <!-- Include other hidden or visible input fields for other properties of the Book class -->

    <div class="container">
        <div class="row">
            <div class="d-md-none mt-2"></div> <!-- Add spacing on smaller screens -->
            <div class="col-md-4">
                @Html.Image(Model.ImageUrl, "Book Image Not Available")
            </div>
            <div class="d-md-none mt-4"></div> <!-- Add spacing on smaller screens -->
            <div class="col-md-8">
                <h3>@Model.Title</h3>
                @if (!string.IsNullOrEmpty(Model.Author))
                {
                    <p>@Html.DisplayNameFor(model => model.Author): @Html.DisplayFor(model => model.Author, new { @class = "text-muted" })</p>
                }

                @if (!string.IsNullOrEmpty(Model.Publisher))
                {
                    <p>@Html.DisplayNameFor(model => model.Publisher): @Html.DisplayFor(model => model.Publisher, new { @class = "text-muted" })</p>
                }

                @if (Model.PublicationYear.HasValue)
                {
                    <p>@Html.DisplayNameFor(model => model.PublicationYear): @Html.DisplayFor(model => model.PublicationYear, new { @class = "text-muted" })</p>
                }

                @if (!string.IsNullOrEmpty(Model.Class))
                {
                    <p>@Html.DisplayNameFor(model => model.@Class): @Html.DisplayFor(model => model.@Class, new { @class = "text-muted" })</p>
                }

                @if (!string.IsNullOrEmpty(Model.Subject))
                {
                    <p>@Html.DisplayNameFor(model => model.Subject): @Html.DisplayFor(model => model.Subject, new { @class = "text-muted" })</p>
                }

                @if (!string.IsNullOrEmpty(Model.ShortDescription))
                {
                    <p>@Html.DisplayNameFor(model => model.ShortDescription): @Html.DisplayFor(model => model.ShortDescription, new { @class = "text-muted" })</p>
                }

                @if (!string.IsNullOrEmpty(Model.Condition))
                {
                    <p>@Html.DisplayNameFor(model => model.Condition): @Html.DisplayFor(model => model.Condition, new { @class = "text-muted" })</p>
                }

                @if (!string.IsNullOrEmpty(Model.Status))
                {
                    <p>@Html.DisplayNameFor(model => model.Status): @Html.DisplayFor(model => model.Status, new { @class = "text-muted" })</p>
                }

                <div class="row center">
                    <div class="col-auto">
                        <button type="submit" id="add-to-wishlist-btn" class="btn btn-primary btn-md">Add to Wishlist</button>
                    </div>

                </div>
                <div class="mt-2"></div>
                <div class="row alert alert-danger" id="message-area"></div>  <!-- messaging area -->
                <div class="mt-2"></div>
            </div>
        </div>
    </div>
}

@*<hr>*@

<div class="justify-content-sm-center">
    <p>
        « @Html.ActionLink("Back to Book List", "Index", null, htmlAttributes: new { title = "Index" }) |
        @Html.ActionLink("Manage Wishlist", "Wishlist", "Donation", null, htmlAttributes: new { id = "manage-books-link", title = "Manage" }) »
    </p>
</div>

@*<script src="~/Scripts/updatewishlistbutton.js"></script>*@

<script>
$(document).ready(function () {
    // Retrieve TempData values
    var bookInWishlist = '@TempData["BookInWishlist"]' === 'True';
    var booksInWishlistDB = '@TempData["BooksInWishlistDB"]' === 'True';

    // Update "Add to Wishlist" button
    var addToWishlistButton = $('#add-to-wishlist-btn');

    if (bookInWishlist || booksInWishlistDB) {
        addToWishlistButton.prop('disabled', true);
        addToWishlistButton.text('Added to Wishlist');
        addToWishlistButton.removeClass('btn-primary').addClass('btn-success');
    } else {
        addToWishlistButton.prop('disabled', false);
        addToWishlistButton.text('Add to Wishlist');
        addToWishlistButton.removeClass('btn-success').addClass('btn-primary');
    }

    if (booksInWishlistDB) {
        $('#message-area').text("You have requested some books, thus new ones can't be added.");
    } else {
        $('#message-area').hide();
    }

});
</script>
